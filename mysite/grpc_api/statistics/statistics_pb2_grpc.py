# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import sys
import os

# Add the directory containing your modules to the Python path
sys.path.append(os.path.abspath(os.path.join(os.path.dirname(__file__))))

import statistics_pb2 as statistics_pb2


class GreeterStub(object):
    """The greeting service definition.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetStatistics = channel.unary_unary(
                '/statistics.Greeter/GetStatistics',
                request_serializer=statistics_pb2.StatisticRequest.SerializeToString,
                response_deserializer=statistics_pb2.StatisticResponse.FromString,
                )
        self.TopPosts = channel.unary_unary(
                '/statistics.Greeter/TopPosts',
                request_serializer=statistics_pb2.TopPostsRequest.SerializeToString,
                response_deserializer=statistics_pb2.TopPostsResponse.FromString,
                )
        self.TopUsers = channel.unary_unary(
                '/statistics.Greeter/TopUsers',
                request_serializer=statistics_pb2.TopUsersRequest.SerializeToString,
                response_deserializer=statistics_pb2.TopUsersResponse.FromString,
                )


class GreeterServicer(object):
    """The greeting service definition.
    """

    def GetStatistics(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TopPosts(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TopUsers(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_GreeterServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetStatistics': grpc.unary_unary_rpc_method_handler(
                    servicer.GetStatistics,
                    request_deserializer=statistics_pb2.StatisticRequest.FromString,
                    response_serializer=statistics_pb2.StatisticResponse.SerializeToString,
            ),
            'TopPosts': grpc.unary_unary_rpc_method_handler(
                    servicer.TopPosts,
                    request_deserializer=statistics_pb2.TopPostsRequest.FromString,
                    response_serializer=statistics_pb2.TopPostsResponse.SerializeToString,
            ),
            'TopUsers': grpc.unary_unary_rpc_method_handler(
                    servicer.TopUsers,
                    request_deserializer=statistics_pb2.TopUsersRequest.FromString,
                    response_serializer=statistics_pb2.TopUsersResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'statistics.Greeter', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Greeter(object):
    """The greeting service definition.
    """

    @staticmethod
    def GetStatistics(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/statistics.Greeter/GetStatistics',
            statistics_pb2.StatisticRequest.SerializeToString,
            statistics_pb2.StatisticResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TopPosts(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/statistics.Greeter/TopPosts',
            statistics_pb2.TopPostsRequest.SerializeToString,
            statistics_pb2.TopPostsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TopUsers(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/statistics.Greeter/TopUsers',
            statistics_pb2.TopUsersRequest.SerializeToString,
            statistics_pb2.TopUsersResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
