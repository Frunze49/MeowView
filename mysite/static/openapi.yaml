openapi: 3.0.0
info:
  title: User API
  description: API для управления пользователями (регистрация, аутентификация, обновление)
  version: 1.0.0

security:
  - basicAuth: []
components:
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic


paths:
  /user/register/:
    post:
      tags:
        - User
      summary: Регистрация пользователя
      description: Создание новой учетной записи пользователя
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                username:
                  type: string
                  example: johndoe
                password:
                  type: string
                  format: password
                  example: secretpassword
              required:
                - username
                - password
      responses:
        '200':
          description: Пользователь успешно зарегистрирован.
        '400':
          description: Пользователь с таким именем уже существует.
    get:
      summary: Получить форму регистрации
      tags:
        - User
      responses:
        '200':
          description: Успешно получили форму регистрации.
          content:
            text/html:
              schema:
                type: string

  /user/login/:
    post:
      tags:
        - User
      summary: Аутентификация пользователя
      description: Вход пользователя в систему
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                username:
                  type: string
                  example: johndoe
                password:
                  type: string
                  format: password
                  example: secretpassword
              required:
                - username
                - password
      responses:
        '200':
          description: Пользователь успешно вошел.
        '401':
          description: Неверное имя пользователя или пароль.
    get:
      summary: Получить форму входа.
      tags:
        - User
      responses:
        '200':
          description: Успешно получил форму входа.
          content:
            text/html:
              schema:
                type: string

  /user/update/:
    post:
      security:
        - basicAuth: []
      tags:
        - User
      summary: Обновить информацию пользователя
      description: Обновляет имя, фамилию, email, телефон и дату рождения пользователя.
      requestBody:
        required:  false
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                First Name:
                  type: string
                  example: Jonh
                Last Name:
                  type: string
                  example: Snow
                Email:
                  type: string
                  format: email
                  example: winter@gmail.com
                Phone number:
                  type: string
                  pattern: '^[0-9]{11}$'
                  example: 89707030704
                Birthday:
                  type: string
                  format: date
                  example: '1990-01-01'
      responses:
        '200':
          description: Профиль успешно обновлен
                
        '400':
          description: Неверные данные

    get:
      summary: Получить данные профиля
      tags:
        - User
      responses:
        '200':
          description: Successfully got user profile.
          content:
            text/html:
              schema:
                type: string

  /home/add_post:
    post:
      tags:
        - Post
      summary: Добавление поста
      description: Создание нового поста от имени текущего пользователя.
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                description:
                  type: string
                  example: This is description
                image:
                  type: string
                  format: binary
                  example: secretpassword
              required:
                - description
                - image
      responses:
        '200':
          description: Пост успешно добавлен.
        '302':
          description: Пользователь не авторизован.
    get:
      summary: Получить форму регистрации
      tags:
        - User
      responses:
        '200':
          description: Успешно получили форму регистрации.
          content:
            text/html:
              schema:
                type: string
        '302':
          description: Пользователь не авторизован.

  /home/update_post/{postId}/:
    parameters:
    - in: path
      name: postId
      required: true
      schema:
        type: integer
        example: 1
      description: The ID of the post to retrieve
    post:
      tags:
        - Post
      summary: Обновление поста
      description: Создание нового поста от имени текущего пользователя.
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                description:
                  type: string
                  example: This is description
                image:
                  type: string
                  format: binary
                  example: secretpassword
              required:
                - description
                - image
      responses:
        '200':
          description: Пост успешно добавлен.
        '302':
          description: Пользователь не авторизован.
    get:
      summary: Получить форму обновления поста
      tags:
        - Post
      responses:
        '200':
          description: Успешно получили форму регистрации.
          content:
            text/html:
              schema:
                type: string
        '302':
          description: Пользователь не авторизован.

  /home/get_post/{postId}/:
    get:
      summary: Получить информацию о посте.
      tags:
        - Post
      parameters:
        - in: path
          name: postId
          required: true
          schema:
            type: integer
            example: 1
          description: The ID of the post to retrieve
      responses:
        '200':
          description: Успешно получил пост.
          content:
            text/html:
              schema:
                type: string
        '400':
          description: Пост не найден

  /home/:
    parameters:
      - in: query
        name: page
        required: false
        schema:
          type: integer
          example: 1
        description: The page_number
    get:
      summary: Получить посты по странице.
      tags:
        - Post
      responses:
        '200':
          description: Успешно получил посты.
          content:
            text/html:
              schema:
                type: string
        '400':
          description: Пост не найден

  /home/delete_post/{postId}/:
    post:
      summary: Удалить пост.
      tags:
        - Post
      parameters:
        - in: path
          name: postId
          required: true
          schema:
            type: integer
            example: 1
          description: The ID of the post to retrieve
      responses:
        '200':
          description: Успешно удалил пост.
          content:
            text/html:
              schema:
                type: string
        '400':
          description: Пост не найден



servers:
- url: "http://127.0.0.1:9000/"
